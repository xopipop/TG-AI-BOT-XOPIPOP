#!/usr/bin/env python3
"""
Webhook –≤–µ—Ä—Å–∏—è Telegram –±–æ—Ç–∞ –¥–ª—è Render
–û–±–Ω–æ–≤–ª–µ–Ω–æ: 2025-08-06 - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω API –¥–ª—è aiogram 3.x
"""
import os
import logging
import asyncio
from aiohttp import web
from telegram_ai_bot import dp, bot

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

WEBHOOK_PATH = "/webhook"
WEBHOOK_URL = os.getenv("WEBHOOK_URL", "https://your-app.onrender.com/webhook")

async def health_check(request):
    return web.Response(text="Bot is running!", status=200)

async def webhook_handler(request):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ webhook –¥–ª—è aiogram 3.x"""
    try:
        update = await request.json()
        await dp.feed_update(bot, update)
        return web.Response(status=200)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook: {e}")
        return web.Response(status=500)

async def on_startup(app):
    """–î–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    logger.info("üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook...")
    try:
        await bot.set_webhook(url=WEBHOOK_URL)
        logger.info(f"‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {WEBHOOK_URL}")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook: {e}")

async def on_shutdown(app):
    """–î–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    logger.info("üõë –£–¥–∞–ª–µ–Ω–∏–µ webhook...")
    try:
        await bot.delete_webhook()
        logger.info("‚úÖ Webhook —É–¥–∞–ª–µ–Ω")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è webhook: {e}")
    
    # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–µ—Å—Å–∏–∏ aiohttp
    logger.info("üõë –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–µ—Å—Å–∏–π...")
    try:
        await bot.session.close()
        logger.info("‚úÖ –°–µ—Å—Å–∏–∏ –∑–∞–∫—Ä—ã—Ç—ã")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è —Å–µ—Å—Å–∏–π: {e}")

def main():
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ Telegram AI Bot (Webhook) - v2.0")
    app = web.Application()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    app.router.add_post(WEBHOOK_PATH, webhook_handler)
    app.router.add_get("/", health_check)
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏—è –∑–∞–ø—É—Å–∫–∞ –∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
    app.on_startup.append(on_startup)
    app.on_shutdown.append(on_shutdown)
    
    port = int(os.getenv("PORT", 8080))
    web.run_app(app, port=port, host="0.0.0.0")

if __name__ == "__main__":
    main()
